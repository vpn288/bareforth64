	macro	convert_to_chs
	;eax-linear sector
	;bx-offset of disk translator table
	xor	edx,edx
	div	[dword bx]	;sector dx -sector
	inc	dx
	push	dx
	xor	edx,edx
	div	[dword bx+4] ;head ax-cyl dx - head
	pop	cx
	endm

	macro	convert_to_linear
	;eax-cylinder
	;ecx-head
	;esi-sector
	;bx-dtt
	mul	[dword bx+4]
	add	eax,ecx
	mul	[dword bx]
	dec	eax
	add	eax,esi
	endm

	macro	read_linear_sectors
	local	m5

	;eax-sector
	;cx-number of sectors
	;es:edi-recieve buffer
	push	eax
	mov	dx,1f2h
	mov	al,cl
	out	dx,al
	xor	edx,edx
	pop	eax
	push	eax
	div	[dword dtt]
	push	eax
	inc	dl
	mov	al,dl
	mov	dx,1f3h
	out	dx,al
	pop	eax
	xor	edx,edx
	div	[dword dtt+4]
	push	eax
	mov	al,dl
	mov	dx,1f6h
	out	dx,al
	pop	eax
	mov	dx,1f4h
	out	dx,al
	inc	dx
	mov	al,ah
	out	dx,al
	shl	cx,8
	inc	ch
	mov	al,20h
	mov	edx,1f001f7h
	out	dx,al
	m5:
	in	al,dx
	test	al,80h
	jne	m5
	m6:
	;mov	dx,1f0h
	in	al,dx
	in	al,dx
	test	al,080h
	jne	m6
	rol	edx,16
	insw
	rol	edx,16
	loop	m6
	pop	eax
	endm


	macro	write_linear_sectors
	local	m5

	;eax-sector
	;cx-number of sectors
	;ds:esi-send buffer
	push	eax
	mov	dx,1f2h
	mov	al,cl
	out	dx,al
	xor	edx,edx
	pop	eax
	push	eax
	div	[dword dtt]
	push	eax
	inc	dl
	mov	al,dl
	mov	dx,1f3h
	out	dx,al
	pop	eax
	xor	edx,edx
	div	[dword dtt+4]
	push	eax
	mov	al,dl
	mov	dx,1f6h
	out	dx,al
	pop	eax
	mov	dx,1f4h
	out	dx,al
	inc	dx
	mov	al,ah
	out	dx,al
	shl	cx,8
	inc	ch
	mov	al,30h
	mov	dx,1f7h
	out	dx,al
	mov	dx,1f0h
	rep	outsw
	m5:
	in	al,dx
	test	al,80h
	jne	m5
	;mov	dx,1f0h
	;rep	outsw
	pop	eax
	endm

